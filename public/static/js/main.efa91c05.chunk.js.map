{"version":3,"sources":["components/DragAndDropForm.js","api/service.js","components/AddThing.js","components/Navbar.js","components/Test.js","components/GRForms.js","components/services/auth.js","components/Signup.js","container/App.js","components/Login.js","serviceWorker.js","index.js"],"names":["DragAndDropForm","state","imageUrl","labels","textResults","webResults","loading","getData","id","props","match","params","axios","get","process","withCredentials","then","res","console","log","data","setState","componentDidMount","this","Component","handleUpload","theFile","post","response","catch","err","saveNewThing","newThing","AddThing","uploadOn","handleFileUpload","e","uploadData","FormData","append","target","files","secure_url","handleSubmit","preventDefault","history","push","_id","imageCheck","src","style","height","className","onSubmit","type","onChange","disabled","Navbar","collapseOnSelect","fixed","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","to","Test","posts","keywords","results","map","el","newObj","title","image","price","num_reviews","stars","product_id","prodName","split","join","url","length","key","alt","GRForms","cleanData","newKeyword","submit","cleaData","fullMerge","concat","strArr","array","value","newArr","a","seen","filter","item","k","hasOwnProperty","uniqBy","JSON","stringify","keyword","triggerDelete","index","splice","handleChange","event","triggerAdd","prevState","Fragment","Object","values","onClick","name","signup","username","password","login","App","user","setUser","exact","path","render","React","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.efa91c05.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass DragAndDropForm extends Component {\n\tstate = {\n\t\timageUrl: '',\n\t\tlabels: [],\n\t\ttextResults: [],\n\t\twebResults: [],\n\t\tloading: true\n\t};\n\n\tgetData = () => {\n\t\tconst { id } = this.props.match.params;\n\n\t\t// passing an id to googleApiRoute\n\t\taxios.get(`${process.env.REACT_APP_API_URL}/googleApi/search/${id}`, { withCredentials: true }).then((res) => {\n\t\t\tconsole.log('axios.get, then(res) -> res.data', res.data);\n\t\t\tconst { imageUrl, labels, textResults, webResults } = res.data;\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\timageUrl,\n\t\t\t\t\tlabels,\n\t\t\t\t\ttextResults,\n\t\t\t\t\twebResults,\n\t\t\t\t\tloading: false\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tconsole.log('this.state from DRAG AND DROP', this.state);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t};\n\n\tcomponentDidMount = () => {\n\t\tthis.getData();\n\t};\n\n\trender() {\n\t\treturn <div>{this.state.loading && <h2>Loading ....</h2>}</div>;\n\t}\n}\n\nexport default DragAndDropForm;\n","// api/service.js\nimport axios from \"axios\";\n\n// theFile - passing the 'uploadData' variable to process the url\nconst handleUpload = theFile => {\n  return axios\n    .post(\"/googleApi\", theFile)\n    .then(response => response.data)\n    .catch(err => err.response.data);\n};\nconst saveNewThing = newThing => {\n  return axios\n    .post(\"/googleApi/upload\", newThing)\n    .then(response => {\n      // console.log('TEEEST', response.data);\n      return response.data;\n      // response.data\n    })\n    .catch(err => err.response.data);\n  // .then(console.log('test'))\n};\n\nexport { handleUpload, saveNewThing };\n","// components/AddThing.js\nimport React, { Component } from 'react';\n\n// import the service file since we need them to send (and get) the data to(from) server\nimport { handleUpload, saveNewThing } from '../api/service';\n\nclass AddThing extends Component {\n\tstate = {\n\t\timageUrl: '',\n\t\tuploadOn: false\n\t};\n\n\t// this method handles just the file upload\n\thandleFileUpload = (e) => {\n\t\t// e.target - is <input type=\"file\">\n\t\t// e.target.files gives a list of all files (here -> just one at position 0)\n\n\t\tconst uploadData = new FormData();\n\n\t\t// imageUrl => this name has to be the same as in the model since we pass\n\t\t// req.body to .create() method when creating a new thing in '/api/things/create' POST route\n\n\t\tuploadData.append('imageUrl', e.target.files[0]);\n\n\t\thandleUpload(uploadData)\n\t\t\t.then(this.setState({ uploadOn: true }))\n\t\t\t.then((response) => {\n\t\t\t\t// after the console.log we can see that response carries 'secure_url' which we can use to update the state\n\t\t\t\tthis.setState({ imageUrl: response.secure_url, uploadOn: false }, () =>\n\t\t\t\t\tconsole.log('this.state.imageUrl in handleUpload fc:', this.state.imageUrl)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log('Error while uploading the file: ', err);\n\t\t\t});\n\t};\n\n\t// this method submits the form\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tif (this.state.uploadOn) return; // do nothing if the file is still being uploaded\n\n\t\tsaveNewThing(this.state)\n\t\t\t.then((res) => {\n\t\t\t\t// here you would redirect to some other page\n\n\t\t\t\tthis.props.history.push(`/search/${res._id}`);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log('Error while adding the thing: ', err);\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconst imageCheck = (\n\t\t\t<div>\n\t\t\t\t<img src={this.state.imageUrl} style={{ height: '200px' }} />\n\t\t\t\t<h1>Is this your final image?</h1>\n\t\t\t</div>\n\t\t);\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2 className=\"header-upload\">Upload your picture</h2>\n\n\t\t\t\t<form onSubmit={(e) => this.handleSubmit(e)}>\n\t\t\t\t\t<div className=\"col-lg col-sm col-12\">\n\t\t\t\t\t\t<label className=\"btn btn-file btn-dark\">\n\t\t\t\t\t\t\tBrowse\n\t\t\t\t\t\t\t<input className=\"input-field\" type=\"file\" onChange={(e) => this.handleFileUpload(e)} />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.state.uploadOn && <h3>Loading...</h3>}\n\t\t\t\t\t{this.state.imageUrl && (\n\t\t\t\t\t\t<button type=\"submit\" disabled={this.state.uploadOn}>\n\t\t\t\t\t\t\tSave new thing\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</form>\n\n\t\t\t\t{this.state.imageUrl && imageCheck}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default AddThing;\n","import React, { Component } from 'react';\nimport { Navbar as Nav } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport About from './About';\n// import { Login } from \"../components/Login\";\n\nexport default class Navbar extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Nav collapseOnSelect className=\"navbar navbar-default\" fixed=\"top\" expand=\"lg\" bg=\"dark\" variant=\"dark\">\n\t\t\t\t<Nav.Brand href=\"/\">Photoshops</Nav.Brand>\n\t\t\t\t<Nav.Toggle aria-controls=\"responsive-navbar-nav\" />\n\t\t\t\t<Nav.Collapse id=\"responsive-navbar-nav\">\n\t\t\t\t\t<Nav className=\"navbar-nav ml-auto\">\n\t\t\t\t\t\t<NavLink className=\"nav-item nav-link active pr-2\" to=\"/signup\">\n\t\t\t\t\t\t\tSign up\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t<NavLink className=\"nav-item nav-link active pr-2\" to=\"/login\">\n\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t<NavLink className=\"nav-item nav-link active pr-2\" to=\"/about\">\n\t\t\t\t\t\t\tAbout\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Nav.Collapse>\n\t\t\t</Nav>\n\t\t);\n\t\t// {\n\t\t/* //<Nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n\t\t\t//   <a class=\"navbar-brand\" href=\"#\">\n\t\t\t//     PhotoShops\n\t\t\t//   </a>\n\t\t\t//   <button\n\t\t\t//     class=\"navbar-toggler\"\n\t\t\t//     type=\"button\"\n\t\t\t//     data-toggle=\"collapse\"\n\t\t\t//     data-target=\"#navbarNavAltMarkup\"\n\t\t\t//     aria-controls=\"navbarNavAltMarkup\"\n\t\t\t//     aria-expanded=\"false\"\n\t\t\t//     aria-label=\"Toggle navigation\"\n\t\t\t//   >\n\t\t\t//     <span class=\"navbar-toggler-icon\"></span>\n\t\t\t//   </button>\n\t\t\t//   <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n\t\t\t//     <div class=\"navbar-nav\">\n\t\t\t//       <a\n\t\t\t//         class=\"nav-item nav-link active\"\n\t\t\t//         href=\"../src/components/Home.js\"\n\t\t\t//       >\n\t\t\t//         Home <span class=\"sr-only\">(current)</span>\n\t\t\t//       </a>\n\t\t\t//       <a class=\"nav-item nav-link\" href=\"#\">\n\t\t\t//         Sign Up\n\t\t\t//       </a>\n\t\t\t//       <a class=\"nav-item nav-link\" href=\"#\">\n\t\t\t//         Log In\n\t\t\t//       </a>\n\t\t\t//       <a class=\"nav-item nav-link disabled\" href=\"#\">\n\t\t\t//         Profile\n\t\t\t//       </a>\n\t\t\t//     </div>\n\t\t\t//   </div>\n\t\t\t// </Nav> */\n\t\t// }\n\t}\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Test extends Component {\n  state = {\n    posts: [],\n    err: \"\",\n    keywords: this.props.data\n  };\n\n  componentDidMount = () => {\n    console.log(\"component mounting\");\n\n    const keywords = this.state.keywords;\n\n    axios\n      .post(\"/products/test\", { keywords })\n      .then(res => {\n        console.log(res.data);\n        const posts = res.data.results.map(el => {\n          const newObj = {};\n          newObj.title = el.title;\n          newObj.image = el.image;\n          newObj.price = el.price;\n          newObj.num_reviews = el.num_reviews;\n          newObj.stars = el.stars;\n          newObj.product_id = el.product_id;\n          return newObj;\n        });\n        this.setState({ posts: posts });\n        console.log(posts);\n      })\n      .catch(function(err) {\n        console.log(err);\n      });\n  };\n\n  render() {\n    const { posts, err } = this.state;\n\n    const prodName = posts.title && posts.title.split(\" \").join(\"-\");\n    const amz = \"http://amazon.com\";\n\n    const url = `${amz}/${prodName}/dp/`;\n    return (\n      <div>\n        List of Products\n        {posts.length\n          ? posts.map(post => (\n              <div key={post.product_id}>\n                <a href={url + post.product_id}>\n                  <div>\n                    <img src={post.image} alt=\"product pic\" />\n                    <h1>{post.title}</h1>\n                  </div>\n                </a>\n                --- ${post.price / 100} --- Star Rating: {post.stars} --- Number\n                of Reviews: {post.num_reviews} ---\n                {post.product_id} ---\n              </div>\n            ))\n          : null}\n        {err ? <div>{err}</div> : null}\n        {/* <button onClick={getData}>Get my data</button> */}\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from \"react\";\n// import GResource from \"./GResource\";\nimport axios from \"axios\";\nimport Test from \"../components/Test\";\n\nclass GRForms extends Component {\n  //pass array here!!!!\n  state = {\n    labels: [],\n    textResults: \"\",\n    webResults: [],\n    imageUrl: \"\",\n    cleanData: [],\n    newKeyword: \"\",\n    submit: false\n  };\n\n  getData = () => {\n    const { id } = this.props.match.params;\n\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/googleApi/search/${id}`, { withCredentials: true })\n      .then(response => {\n        this.setState(\n          {\n            labels: response.data.labels,\n            textResults: response.data.textResults,\n            webResults: response.data.webResults,\n            imageUrl: response.data.imageUrl\n          },\n          () => this.cleaData()\n        );\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  cleaData = () => {\n    const { labels, textResults, webResults } = this.state;\n\n    let fullMerge = labels.concat(webResults);\n\n    let str;\n    if (textResults) {\n      str = textResults;\n    } else {\n      str = \"\";\n    }\n    let strArr = str.split(\" \");\n\n    let array = [];\n    for (var key in fullMerge) {\n      var value = fullMerge[key];\n      array.push(value);\n    }\n    let finalArr = [...array, ...strArr];\n\n    function uniqBy(a, key) {\n      var seen = {};\n      return a.filter(function(item) {\n        var k = key(item);\n        return seen.hasOwnProperty(k) ? false : (seen[k] = true);\n      });\n    }\n\n    let newArr = uniqBy(finalArr, JSON.stringify).filter(keyword => {\n      return keyword !== \"\";\n    });\n\n    this.setState({ cleanData: newArr }, () => console.log(newArr));\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.setState({ submit: true });\n    console.log(this.cleaData);\n  };\n\n  triggerDelete = (keyword, index) => {\n    let cleanData = [...this.state.cleanData];\n    cleanData.splice(index, 1);\n    this.setState({ cleanData: cleanData });\n  };\n\n  handleChange = event => {\n    this.setState({\n      newKeyword: event.target.value\n    });\n  };\n\n  triggerAdd = event => {\n    this.setState(prevState => ({\n      cleanData: [...prevState.cleanData, `${this.state.newKeyword}`],\n      newKeyword: \"\"\n    }));\n    // this.inputTitle.value = \"\";\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const { imageUrl, cleanData, submit } = this.state;\n\n    {\n      return !submit ? (\n        <div className=\"Container\">\n          <div className=\"FormKeyWords\">\n            <form onSubmit={this.handleSubmit}>\n              {imageUrl && (\n                <React.Fragment>\n                  <ul>\n                    {this.state.cleanData.map((keyword, index) => {\n                      return (\n                        <>\n                          <li key={index}>\n                            {Object.values(keyword)}\n                            <button\n                              variant=\"danger\"\n                              onClick={e => {\n                                e.preventDefault();\n                                this.triggerDelete(keyword, index);\n                              }}\n>\n                              <span>❌</span>\n                            </button>\n                          </li>\n                        </>\n                      );\n                    })}\n                  </ul>\n                  <input\n                    type=\"text\"\n                    name=\"newKeyword\"\n                    id=\"newKeyword\"\n                    value={this.state.newKeyword}\n                    onChange={this.handleChange}\n                  ></input>\n                  <button\n                    onClick={e => {\n                      e.preventDefault();\n                      this.triggerAdd(cleanData);\n                    }}\n                    // ref={el => (this.inputTitle.value = el)}\n                  >\n                    ADD\n                  </button>\n                  <button type=\"submit\">Search Amazon</button>\n                </React.Fragment>\n              )}\n            </form>\n            <div>\n              {/* <div className=\"wrap\">\n              <div className=\"search\">\n                <input\n                  type=\"text\"\n                  className=\"searchTerm\"\n                  placeholder=\"What are you looking for?\"\n                >\n                  <button type=\"submit\" className=\"addButton\">\n                    <i className=\"fa fa-search\"></i>\n                  </button>\n                </input>\n                <button>ADD</button>\n              </div>\n            </div> */}\n              {/* <div className=\"InputAdd\">input/add</div> */}\n            </div>\n            {/* <div className=\"ImageEl\">\n            <img src={this.state.googleImage} />\n          </div> */}\n          </div>\n        </div>\n      ) : (\n        <div>\n          <Test data={cleanData} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default GRForms;\n","import axios from \"axios\";\n\nconst signup = (username, password) => {\n  return axios\n    .post(\"/api/auth/signup\", {\n      username: username,\n      password: password\n    })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(\"/api/auth/login\", {\n      username: username,\n      password: password\n    })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst logout = () => {\n  axios.delete(\"/api/auth/logout\");\n};\n\nexport { signup, login, logout };\n","import React, { Component } from \"react\";\nimport { signup } from \"./services/auth\";\nimport { Alert, Form, Button } from \"react-bootstrap\";\n\nclass Signup extends Component {\n  //Everything here\n  state = {\n    username: \"\",\n    password: \"\",\n    error: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    // event.preventDefault(event);\nconsole.log(event);\n    signup(this.state.username, this.state.password).then(data => {\n      if (data.message) {\n        // handle errors\n        this.setState({\n          error: data.message\n        });\n      } else {\n        // no error\n        // lift the data up to the App state\n        this.props.setUser(data);\n        // redirect to \"/projects\"\n        this.props.history.push(\"/products\");\n      }\n    });\n  };\n\n  //Functions here\n  render() {\n    //Everything that shows on browser here\n    return (\n      <div>\n        <form>\n          <h3>Sign Up</h3>\n\n          <div className=\"form-group\">\n            <label>First name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"First name\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Last name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Last name\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Email address</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              placeholder=\"Enter email\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label\n              onChange={e => {\n                e.preventDefault();\n                this.handleChange();\n              }}\n            >\n              Password\n            </label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Enter password\"\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            onClick={e => {\n              e.preventDefault();\n              this.handleSubmit(this.state.username, this.state.password);\n            }}\n            className=\"btn btn-primary btn-block\"\n          >\n            Sign Up\n          </button>\n          <p className=\"forgot-password text-right\">\n            Already registered <a href=\"#\">sign in?</a>\n          </p>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport DragAndDropForm from '../components/DragAndDropForm';\nimport AddThing from '../components/AddThing';\nimport Navbar from '../components/Navbar';\n\nimport { NavLink } from 'react-bootstrap';\n// import Home from \"../components/Home\";\nimport GRForms from '../components/GRForms';\n// import Test from \"../components/Test\";\nimport Signup from '../components/Signup';\nimport Login from '../components/Login';\n\nclass App extends React.Component {\n\tstate = {\n\t\tuser: this.props.user\n\t};\n\n\tsetUser = (user) => {\n\t\tthis.setState({\n\t\t\tuser: user\n\t\t});\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{/* <Home className=\"class-home\" /> */}\n\t\t\t\t<Navbar />\n\n\t\t\t\t{/* <Switch> */}\n\t\t\t\t<Route exact path=\"/\" render={(props) => <AddThing {...props} className=\"class-home\" />} />\n\t\t\t\t{/* <Route path=\"/Login\" component={Login} />\n        <Route path=\"/SignUp\" component={Signup} /> */}\n\n\t\t\t\t<Route exact path=\"/search/:id\" render={(props) => <DragAndDropForm {...props} />} />\n\n\t\t\t\t<Route exact path=\"/search/:id\" render={(props) => <GRForms {...props} />} />\n\t\t\t\t{/* </Switch> */}\n\n\t\t\t\t{/* <Route exact path=\"/search/:id\" render={props => <Test {...props} />} /> */}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Alert, Form, Button } from 'react-bootstrap';\nimport { login } from '../components/services/auth';\nclass Login extends Component {\n\t//Everything here\n\tstate = {\n\t\tusername: '',\n\t\tpassword: '',\n\t\terror: ''\n\t};\n\n\thandleChange = (event) => {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t});\n\t};\n\n\thandleSubmit = (event) => {\n\t\tevent.preventDefault();\n\n\t\tlogin(this.state.username, this.state.password).then((data) => {\n\t\t\tif (data.message) {\n\t\t\t\t// handle errors\n\t\t\t\tthis.setState({\n\t\t\t\t\terror: data.message\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// no error\n\t\t\t\t// lift the data up to the App state\n\t\t\t\tthis.props.setUser(data);\n\t\t\t\t// redirect to \"/projects\"\n\t\t\t\tthis.props.history.push('/projects');\n\t\t\t}\n\t\t});\n\t};\n\t//Functions here\n\trender() {\n\t\t//Everything that the browser sees\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>Login</h2>\n\t\t\t\t<Form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Label htmlFor=\"username\">Username: </Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\tvalue={this.state.username}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Label htmlFor=\"password\">Password: </Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t{this.state.error && <Alert variant=\"danger\">{this.state.error}</Alert>}\n\t\t\t\t\t<Button type=\"submit\">Log in</Button>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Login;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}